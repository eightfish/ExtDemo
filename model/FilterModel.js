/*
 * File: app/model/FilterModel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EvolveQueryEditor.model.FilterModel', {
    extend: 'Ext.data.Model',
    idgen: 'sequential',
    idProperty: 'id',
    
    requires: [
		
	],
    
    uses: [
        'EvolveQueryEditor.model.FilterValueModel'
    ],

    hasOne: {
        associationKey: 'Value',
        model: 'EvolveQueryEditor.model.FilterValueModel',
        setterName: 'setValue',
        getterName: 'getValue'
    },
    fields: [
        {
            name: 'single',
            type: 'boolean'
        },
        {
            name: 'name',
			type: 'string'
        },
        {
            name: 'from',
			type: 'string',
            defaultValue: undefined
        },
        {
            name: 'to',
			type: 'string',
			defaultValue: undefined,
			convert: function (value, record) {
				return !record.get('single') && !record.isTable() ? value: ''; 
			}
        },
        {
            name: 'codePath',
			type: 'string'
        },
        {
            name: 'dataType', //todo: should use FieldDataTypeModel rather than plain string
			type: 'string'
        },
        {
            name: 'lookupCategory'
        },
        {
            name: 'allowSegments',
			type: 'boolean'
        },
        {
            name: 'allowMultipleFilters',
			type: 'boolean'
        },
        {
            name: 'hasValue',
            type: 'boolean',
            defaultValue: false
        },
        {
            name: 'superFieldFilter',
            type: 'boolean',
            defaultValue: false
        },
        {
            name: 'isOptionalFilter',
            type: 'boolean',
            defaultValue: false
        },
    ],
        
    isOptionalFilter: function () {
        return this.get('isOptionalFilter') === true;
    },

    isSuperFieldFilter: function () {
        return this.get('superFieldFilter') === true;
    },
	
    isTable: function () {
        return this.get('codePath') === 'TABLE';
    },

	toJsonWithOptions : function() {
		var filterOptionsModel = EvolveQueryEditor.model.FilterOptionsModel.createFromFilterModel(this);
		var jsonObj = {};
		jsonObj.codePath = this.get('codePath');
		jsonObj.valueFrom = filterOptionsModel.get('from');
		jsonObj.valueTo = filterOptionsModel.get('to');
		jsonObj.operator = filterOptionsModel.get('operator').get('value');
		jsonObj.mode = filterOptionsModel.get('mode').get('value');
		jsonObj.caseSens = !filterOptionsModel.get('caseInsensitive');
		jsonObj.segment = false; //filterOptionsModel.get('segment');
		jsonObj.segmentOffset = filterOptionsModel.get('segmentOffset');
		jsonObj.segmentLength = filterOptionsModel.get('segmentLength');
		
		return jsonObj;
	}                   
});